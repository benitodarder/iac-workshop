## Environment ##
ami_owners: 
  - <AMI owner>
ami_filters:
  - <AMI filter selector pattern 01>
  - ..
  - <AMI filter selector pattern n>
ami_filter_by: <AMI selector criteria>
asg_min_size: <ASG min. size>
asg_max_size: <ASG max. size>
asg_desired_capacity: <ASG desired capacity>
asg_wait_for_capacity_timeout: <ASG wait>
cloud_init_file_path: <cloud-init file template path>
ebs_volume_size: <EBS volume size>
ebs_volume_type: <EBS volume type>
inbound_alb_cidrs: 
      - <ALB open CIDR 0>
      ...
      - <ALB open CIDR N>  
instance_type: <Instance type, must be compatible with AMI type>
key_pair_name: <SSH Key, public>
load_balancer_application_listening_ports: 
  - port: <Service inbound port 0>
    protocol: <Service inbound protocol 0>
    path_pattern: <Path patten 0>
    priority: <Priority 0>
...
  - port: <Service inbound port N>
    protocol: <Service inbound protocol N>
    path_pattern: <Path patten N>
    priority: <Priority N>
load_balancer_certificate_arn: <Certificate ARN>
load_balancer_network_listening_ports: 
  - port: <NLB port 0>
    protocol: <NLB protocol 0>
    inbound_nlb_cidrs: 
      - <NLB authorized CIDR 0 0>
      ...
      - <NLB authorized CIDR 0 N>
...
  - port: <NLB port N>
    protocol: <NLB protocol N>
    inbound_nlb_cidrs: 
      - <NLB authorized CIDR N 0>
      ...
      - <NLB authorized CIDR N N>      
load_balancer_ssl_policy: <SSL Policy>
subnet_filter_criteria: <Subnet filter criteria>
subnet_filter_values:
  - <Subnet filter values, 0>
subnet_id_public:
  - <Public subnet 01...ALB external facade>
  - ...
  - <Public subnet n .. ALB external facade>
vpc_id: <VPC hosting the instance>

## Tags ##
tags_common:
  account_id: <Account id.>
  environment: <development, production, laboratory...>
  business_unit: <Responsible dept.>
  service_name: <AWS service name: lambda, ec2, vpc...>
  service_resource: <AWS service resource: bucket, instance, ami...>
  purpose: <Intended use>
  region: <Region>
